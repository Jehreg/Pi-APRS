#!/bin/bash

yad --width=350 --height=75 --title="GPS POLL" --timeout=9 --timeout-indicator=top --no-buttons --center --text="Attempting to access GPS" &

GPSDATA=/run/user/1000/gps.data

exec 2>/dev/null
# get positions
gpstmp=/tmp/gps.data
gpspipe -w -n 40 >$gpstmp"1"&
ppid=$!
#echo "Standby....This takes 10 seconds to complete"
sleep 10
kill -9 $ppid
cat $gpstmp"1"|grep -om1 "[-]\?[[:digit:]]\{1,3\}\.[[:digit:]]\{9\}" >$gpstmp
size=$(stat -c%s $gpstmp)
if [ $size -gt 10 ]; then
   cat $gpstmp|sed -n -e 1p >/tmp/gps.lat
   cat $gpstmp|sed -n -e 2p >/tmp/gps.lon
fi
rm $gpstmp $gpstmp"1" 

LAT=$(cat /tmp/gps.lat)
LONG=$(cat /tmp/gps.lon)

#echo $LAT
#echo $LONG


rm /tmp/gps.lat /tmp/gps.lon

if [ -z "$LAT" ]; then
yad --width=350 --height=75 --title="NO GPS" --timeout=3 --timeout-indicator=top --no-buttons --center --text="No GPS or no GPS lock." &
exit
fi


#Convert LAT to DMS
CHECKLAT=$(echo $LAT | grep "-")
	if [ -z "$CHECKLAT" ]
	then
	LATD=N
	else
	LAT=$(echo $LAT | sed 's/-//')
	LATD=S
	fi
D=$(echo $LAT | sed 's/\..*$//')
M=$(echo "($LAT-$D)*60" | bc | sed 's/\..*$//')
S1=$(echo "$M/60" | bc -l | cut -b 1-2)
S=$(echo "($LAT-$D-$S1)*3600" | bc -l | cut -b 1-2)

LAT="$D$M.$S$LATD"

#Convert LON to DMS
CHECKLONG=$(echo $LONG | grep "-")
	if [ -z "$CHECKLONG" ]
	then
	LONGD=E
	else
	LONG=$(echo $LONG | sed 's/-//')
	LONGD=W
	fi

D=$(echo $LONG | sed 's/\..*$//')
M=$(echo "($LONG-$D)*60" | bc | sed 's/\..*$//')
#S=$(echo "($LONG-$D-$M/60)*3600" | bc | cut -b 1-2)
S1=$(echo "$M/60" | bc -l | cut -b 1-2)
S=$(echo "($LONG-$D-$S1)*3600" | bc -l | cut -b 1-2)
LONG="0$D$M.$S$LONGD"

#echo $LONG

#Send result to ~/Pi-APRS/config

sed -i "s/LATLON=.*$/LATLON=$LAT\/$LONG/" $HOME/Pi-APRS/config
yad --width=350 --height=75 --title="Updating" --timeout=3 --timeout-indicator=top --no-buttons --center --text="Updating LAT/LON. Press OK to save" &
echo "$LAT/$LONG" > $GPSDATA















