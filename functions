#Funtions called by main script
#20200413 km4ack

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

source $DIR/config

MYPATH=$DIR

DIRE=$(pidof direwolf)
KSUT=$(pidof kissutil)

#Generic Send Function
SEND(){
yad --width=300 --height=75 --title="Sending" --timeout=1 --timeout-indicator=top --no-buttons --center --text="Sending $WHAT" &
}

#Sending Position Function
SENDPOS(){
if [ -z "$DIRE" ] || [ -z "$KSUT" ]; then
yad --text="Start modems and try again" --text-align=center --center --window-icon=$HOME/Pi-ISS/ISS.png --button=gtk-ok:1
exit
fi
yad --width=300 --height=75 --title="Sending" --timeout=1 --timeout-indicator=top --no-buttons --center --window-icon=$HOME/Pi-ISS/ISS.png --text="Sending Postion" &
$MYPATH/position.sh
}

#Sending Status Function
SENDSTAT(){
if [ -z "$DIRE" ] || [ -z "$KSUT" ]; then
yad --text="Start modems and try again" --text-align=center --center --window-icon=$HOME/Pi-ISS/ISS.png --button=gtk-ok:1
exit
fi
yad --width=300 --height=75 --title="Sending" --timeout=1 --timeout-indicator=top --no-buttons --center --window-icon=$HOME/Pi-ISS/ISS.png --text="Sending Status" &
$MYPATH/status.sh
}
	
#funtion to send free messages
FREEMSG() {
if [ -z "$DIRE" ] || [ -z "$KSUT" ]; then
yad --text="Start modems and try again" --text-align=center --center --window-icon=$HOME/Pi-ISS/ISS.png --button=gtk-ok:1
exit
fi
MSG=$(yad --center --width=400 --height=100 --window-icon=$HOME/Pi-ISS/ISS.png --title="Free Message" --form --field="TO" --field="Message")
TO=$(echo $MSG | awk -F "|" '{print $1}')
MSG=$(echo $MSG | awk -F "|" '{print $2}')
if [ -z "$TO" ]; then
exit
fi
WHAT=message
SEND
$MYPATH/freemsg.sh $TO "$MSG"
}

#function to send QSL message
QSL73(){
if [ -z "$DIRE" ] || [ -z "$KSUT" ]; then
yad --text="Start modems and try again" --text-align=center --center --window-icon=$HOME/Pi-ISS/ISS.png --button=gtk-ok:1
exit
fi
MSG=$(yad --center --width=200 --height=100 --window-icon=$HOME/Pi-ISS/ISS.png --title="Send QSL" --form --field="Call sign to QSL")
TO=$(echo $MSG | awk -F "|" '{print $1}')
if [ -z "$TO" ]; then
exit
fi
WHAT=QSL
SEND
$MYPATH/qsl73.sh $TO
}

#function to send heard you message
HEARDU(){
if [ -z "$DIRE" ] || [ -z "$KSUT" ]; then
yad --text="Start modems and try again" --window-icon=$HOME/Pi-ISS/ISS.png --text-align=center --center --button=gtk-ok:1
exit
fi
MSG=$(yad --center --width=200 --height=100 --window-icon=$HOME/Pi-ISS/ISS.png --form --title="Heard You!!" --field="Who did you hear")
TO=$(echo $MSG | awk -F "|" '{print $1}')
if [ -z "$TO" ]; then
exit
fi
WHAT="Heard you"
SEND
$MYPATH/heardyou.sh $TO
}

#Start direwolf & kissattach function
STARTMODEM () {

#give user instant feedback on button push
yad --width=300 --height=75 --title="Modems" --timeout=1 --timeout-indicator=top --window-icon=$HOME/Pi-ISS/ISS.png --no-buttons --center --text="Starting Modems" &
LOGFILE=$HOME/Pi-ISS/log.txt
TEMPLOG=$HOME/Pi-ISS/templog.txt
TODAY=$(date)
rm $LOGFILE $TEMPLOG
touch $LOGFILE
echo "Log file created $TODAY" > $LOGFILE
#start direwolf
$DIREWOLF &
sleep 1
#get correct link for direwolf
#LINK=$(ls -l /tmp/kisstnc | awk '{print $NF}')
$KISS &
sleep 1
DIRE=$(pidof direwolf)
KISS=$(pidof kissutil)

if [ -z "$KISS" ] || [ -z $DIRE ]; then
yad --text="Modems FAILED to start. Please check config file and try again" --window-icon=$HOME/Pi-ISS/ISS.png --text-align=center --center --button=gtk-ok:1
else
yad --text="Modems have started" --window-icon=$HOME/Pi-ISS/ISS.png --text-align=center --center --button=gtk-ok:1
fi
}

#Update config file function
MYCONFIG(){
TEMPFILE=$HOME/Pi-APRS/temp-config
CONFIG=$HOME/Pi-APRS/config

touch $TEMPFILE

SETTING=$(yad --center --width=500 --wrap --window-icon=$HOME/Pi-ISS/ISS.png --title="Pi-ISS Setting" --text="Please answer the following selections:" \
--form --separator="|" --item-separator="," \
--field="Current Callsign" "$MYCALL" \
--field="SSID" "$SSID" \
--field="City" "$CITY" \
--field="State" "$STATE" \
--field="Grid" "$GRID" \
--field="Heard You Message" "$HEARDYOU" \
--field="QSL Message" "$QSLMESSAGE" \
--field="Status Comment" "$STATUSCOMMENT" \
--field="LAT/LON" "$LATLON" \
--field="APRS Symbol" "$SYMBOL" \
--field="ARPS PATH" "$APRSPATH" \
--field="Direwolf Start Command":RO "$DIREWOLF" \
--field="Temp Message Path":RO "$MSGPATH" \
--field="Kissutil Start Command":RO "$KISS"
)

if [ -z "$SETTING" ]; then
exit
fi

MYCALL=$(echo $SETTING | awk -F "|" '{print$1}')
SSID=$(echo $SETTING | awk -F "|" '{print$2}')
CITY=$(echo $SETTING | awk -F "|" '{print$3}')
STATE=$(echo $SETTING | awk -F "|" '{print$4}')
GRID=$(echo $SETTING | awk -F "|" '{print$5}')
HEARDYOU=$(echo $SETTING | awk -F "|" '{print$6}')
QSLMESSASGE=$(echo $SETTING | awk -F "|" '{print$7}')
STATUSCOMMENT=$(echo $SETTING | awk -F "|" '{print$8}')
LATLON=$(echo $SETTING | awk -F "|" '{print$9}')
SYMBOL=$(echo $SETTING | awk -F "|" '{print$10}')
APRSPATH=$(echo $SETTING | awk -F "|" '{print$11}')
DIREWOLF=$(echo $SETTING | awk -F "|" '{print$12}')
MSGPATH=$(echo $SETTING | awk -F "|" '{print$13}')
KISS=$(echo $SETTING | awk -F "|" '{print$14}')

echo "#Config file for Pi-ISS" >> $TEMPFILE
echo "#20200414 KM4ACK" >> $TEMPFILE
echo "" >> $TEMPFILE
echo "" >> $TEMPFILE
echo "MYCALL=$MYCALL" >> $TEMPFILE
echo "SSID=$SSID" >> $TEMPFILE
echo "CITY=$CITY" >> $TEMPFILE
echo "STATE=$STATE" >> $TEMPFILE
echo "GRID="$GRID >> $TEMPFILE
echo "HEARDYOU=\"$HEARDYOU\"" >> $TEMPFILE
echo "QSLMESSAGE=\"$QSLMESSAGE\"" >> $TEMPFILE
echo "STATUSCOMMENT=\"$STATUSCOMMENT\"" >> $TEMPFILE
echo "LATLON=$LATLON" >> $TEMPFILE
echo "SYMBOL=\"$SYMBOL\"" >> $TEMPFILE
echo "APRSPATH=\"$APRSPATH\"" >> $TEMPFILE
echo "DIREWOLF=\"$DIREWOLF\"" >> $TEMPFILE
echo "MSGPATH=$MSGPATH" >> $TEMPFILE
echo "KISS=\"$KISS\"" >> $TEMPFILE

cp $TEMPFILE $CONFIG
rm $TEMPFILE
}

#function taken out of service because
#i couldn't resolve the blinking function. It is better to 
#start the app in a terminal window and use the terminal window
#to watch for incoming packets. 20200415 km4ack 
CHECKLOG(){
#get screen resolution
WIDTH=$(xdpyinfo | awk '/dimensions:/ { print $2 }' | sed 's/x.*$//')


LOGFILE(){
#set path to log file
LOGFILE=$HOME/Pi-ISS/log.txt
TEMPLOG=$HOME/Pi-ISS/templog.txt

#write 5 lines to templog
tail -5 $LOGFILE > $TEMPLOG

LOG=$(yad --top --width=$WIDTH --height=200 --window-icon=$HOME/Pi-ISS/ISS.png --title="Last 5 Heard Packets" --text-info=<$TEMPLOG --timeout=2 \
--text="Last 15 items in my log file" \
--button="Exit:1" \
--button="Delete Log:2"
)

RC=$?
if [ $RC == '1' ]
then
rm $TEMPLOG
exit 0
elif [ $RC == '2' ]
then
rm $LOGFILE $TEMPLOG
fi
}

counter=1
until [ $counter -gt 1000 ]
do
LOGFILE
((counter++))
echo $counter
done

}









